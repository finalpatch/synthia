#+TITLE: The Code of Music
#+Author: Li Feng
#+Email: fengli@gmail.com

:SETUP:
#+STARTUP: showall inlineimages
#+OPTIONS: num:nil toc:nil
#+OPTIONS: reveal_width:1400 reveal_height:1000
#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js
#+REVEAL_TRANS: slide
#+REVEAL_THEME: beige
#+REVEAL_PLUGINS: (highlight)
#+BEGIN_SRC lisp :results silent :exports none
  (ql:quickload '(:eazy-gnuplot :synthia))
  (use-package :eazy-gnuplot)
  (ensure-directories-exist "images/")
#+end_src
#+BEGIN_SRC lisp :results silent :exports none
  (defparameter *terminal* (if (string= (software-type) "Darwin")
                               '(svg background "white" size 800 600 font ",20" linewidth 2)
                               '(svg  size 480 360)))
  ; (defparameter *terminal* '(svg))
  (defun waveform (output label duration func)
    (let ((output (concatenate 'string "images/" output)))
      (with-plots (*standard-output* :debug nil)
        (gp-setup :terminal *terminal* :output output :xlabel "time" :ylabel "amplitude")
        (gp :set :yrange '("-1.2:1.2"))
        (plot
         (lambda ()
           (loop for time from 0 upto duration by 0.00002
                 do (format t "~&~a ~a" time (funcall func time))))
         :with `(:lines title ,label)))
      output))
#+end_src
:END:

* Basic waveforms
** Sine wave
   If $a^2=b$ and \( b=2 \), then the solution must be
   either $$ a=+\sqrt{2} $$ or \[ a=-\sqrt{2} \]
   #+begin_src lisp :results file :exports both
   (waveform "sine.svg" "440Hz Sine wave" 0.01
   (lambda (time) (synthia::osc-sine 440 time)))
   #+end_src

   #+RESULTS:
   [[file:images/sine.svg]]

** Square wave
   #+begin_src lisp :results file :exports both
   (waveform "square.svg" "440Hz Square wave" 0.01
   (lambda (time) (synthia::osc-square 440 time)))
   #+end_src

   #+RESULTS:
   [[file:images/square.svg]]

** Triangle wave
   #+begin_src lisp :results file :exports both
   (waveform "triangle.svg" "440Hz Triangle wave" 0.01
   (lambda (time) (synthia::osc-triangle 440 time)))
   #+end_src

   #+RESULTS:
   [[file:images/triangle.svg]]

** Saw wave
   #+begin_src lisp :results file :exports both
   (waveform "saw.svg" "440Hz Saw wave" 0.01
   (lambda (time) (synthia::osc-saw 440 time)))
   #+end_src

   #+RESULTS:
   [[file:images/saw.svg]]
